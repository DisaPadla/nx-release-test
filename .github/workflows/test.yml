name: 'Check'
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RELEASE_BRANCH: nx-release-please

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Echo test 1
        run: echo "prepare"

  test-1:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Echo test 1
        run: echo "test 1"

  test-2:
    runs-on: ubuntu-latest
    if: false
    needs: prepare
    steps:
      - name: Echo test 2
        run: echo "test 2"

  result:
    runs-on: ubuntu-latest
    needs: 
      - test-1
      - test-2
    if: false
    steps:
      - name: Echo result
        run: echo "result"
  
  summary:
    runs-on: ubuntu-latest
    needs: 
      - prepare
      - test-1
      - test-2
      - result
    if: always() && !failure() && !cancelled()
    steps:
      - name: Echo summary
        run: |
          echo "### We're ready! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "You can find release v-env [here](https://www.somesite.com)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo "REMOTE_APP__DOCUFLOW_HISTORY: [https://www.somesite.com](https://www.somesite.com)" >> $GITHUB_STEP_SUMMARY
          echo "REMOTE_APP__DOCUFLOW_HISTORY: [https://www.somesite.com](https://www.somesite.com)" >> $GITHUB_STEP_SUMMARY
          echo "REMOTE_APP__DOCUFLOW_HISTORY: [https://www.somesite.com](https://www.somesite.com)" >> $GITHUB_STEP_SUMMARY
          echo "REMOTE_APP__DOCUFLOW_HISTORY: [https://www.somesite.com](https://www.somesite.com)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
